# Root logger option
log4j.rootLogger=info, stdout, file
#log4j.rootLogger=DEBUG, stdout, file
#log4j.rootLogger=DEBUG, file
#log4j.rootLogger=stdout, file
 
# Redirect log messages to console
log4j.appender.stdout=org.apache.log4j.ConsoleAppender
log4j.appender.stdout.Target=System.out
log4j.appender.stdout.layout=org.apache.log4j.PatternLayout
log4j.appender.stdout.layout.ConversionPattern=%d{yyyy-MM-dd HH:mm:ss} %-5p %c{1}:%L - %M - %m%n
 
# Redirect log messages to a log file, support file rolling.
log4j.appender.file=com.nissangroups.pd.util.CustomLog
log4j.appender.file.File=/home/asp2manage/application/appl-log/${logfile.name}.%timestamp
#log4j.appender.file.File=D:/LocalData/z015883/appl-log/${logfile.name}/.%timestamp
#log4j.appender.file.MaxFileSize=5MB
#log4j.appender.file.MaxBackupIndex=10
log4j.appender.file.layout=org.apache.log4j.PatternLayout
log4j.appender.file.layout.ConversionPattern=%d{yyyy-MM-dd HH:mm:ss} %-5p %c{1}:%L - %M - %m%n

### Hibernate

log4j.logger.org.hibernate.SQL=debug 
log4j.logger.org.hibernate.id=info
log4j.logger.org.hibernate.cache=debug
log4j.logger.org.hibernate.type=trace

### set log levels - for more verbose logging change 'info' to 'debug' ###

### enable the following line if you want to track down connection ###
### leakages when using DriverManagerConnectionProvider ###
#log4j.logger.org.hibernate.connection.DriverManagerConnectionProvider=trace

### enable spring
#log4j.logger.org.springframework=info
#log4j.logger.org.springframework.transaction=debug
#log4j.logger.org.springframework.jdbc.core=debug
#log4j.logger.org.springframework.orm=debug

###  debug your specific package or classes with the following example
#log4j.logger.org.springframework.jdbc=info
#log4j.logger.org.springframework.batch=debug
#log4j.logger.org.springframework.batch.sample=debug