<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:p="http://www.springframework.org/schema/p"
	xmlns:aop="http://www.springframework.org/schema/aop" xmlns:context="http://www.springframework.org/schema/context"
	xmlns:tx="http://www.springframework.org/schema/tx" xmlns:task="http://www.springframework.org/schema/task"
	xmlns:util="http://www.springframework.org/schema/util" xmlns:batch="http://www.springframework.org/schema/batch"
	xsi:schemaLocation="  
             http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop-4.0.xsd  
             http://www.springframework.org/schema/util http://www.springframework.org/schema/util/spring-util-4.0.xsd  
             http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-4.0.xsd  
             http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-4.0.xsd  
             http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx-4.0.xsd  
             http://www.springframework.org/schema/batch http://www.springframework.org/schema/batch/spring-batch-2.2.xsd  
             http://www.springframework.org/schema/task http://www.springframework.org/schema/task/spring-task-4.0.xsd">

	<import resource="../Config/spring-context-orm.xml" />
	<bean id="transactionManager" class="org.springframework.orm.jpa.JpaTransactionManager">
		<property name="entityManagerFactory" ref="entityManagerFactory" />
		<property name="dataSource" ref="dataSource" />
	</bean>
	<bean id="persistenceAnnotation"
		class="org.springframework.orm.jpa.support.PersistenceAnnotationBeanPostProcessor" />
	<tx:annotation-driven transaction-manager="transactionManager" />
	<bean id="jobRepository"
		class="org.springframework.batch.core.repository.support.MapJobRepositoryFactoryBean">
		<property name="transactionManager" ref="transactionManager" />
		<property name="isolationLevelForCreate" value="ISOLATION_DEFAULT" />
	</bean>
	<bean id="jobLauncher"
		class="org.springframework.batch.core.launch.support.SimpleJobLauncher">
		<property name="jobRepository" ref="jobRepository" />
	</bean>
	<bean id="b000005failureLoggerListener"
		class="com.nissangroups.pd.listeners.CommonFailureLoggerListener"></bean>
	<bean id="b000005jobExecutionListener"
		class="com.nissangroups.pd.listeners.CommonJobExecutionListener">
	</bean>

	<batch:job id="B000007">
		<batch:listeners>
			<batch:listener ref="b000005jobExecutionListener" />
		</batch:listeners>
<!-- Reader in this step used to extract the data as mentioned in the Process P0002 & P0003 OrderTakeBaseMonth and Minimum Year Month  -->
		
		<batch:step id="B000007step1" next="B000007step2">
			<batch:tasklet>
				<batch:listeners>
					<batch:listener ref="b000005failureLoggerListener">
					</batch:listener>
				</batch:listeners>
				<batch:chunk reader="minimumCarSeriesLimit" processor="weeklyOrderTakeBaseMonthProcessor"
					writer="noOpItemWriter" commit-interval="10000" />
			</batch:tasklet>
		</batch:step>
		<batch:step id="B000007step2" next="B000007step3">
			<batch:tasklet>
				<batch:listeners>
					<batch:listener ref="b000005failureLoggerListener"></batch:listener>
				</batch:listeners>

				<batch:chunk reader="B000007CustomReader" processor="b000007Processor"
					writer="customListWriter" commit-interval="10000" />
			</batch:tasklet>
		</batch:step>
		
		<batch:step id="B000007step3">
			<batch:tasklet>
				<batch:listeners>
					<batch:listener ref="b000005failureLoggerListener"></batch:listener>
				</batch:listeners>
				<batch:chunk reader="errorReportReader" writer="errorReportWriter"
					commit-interval="10000"></batch:chunk>
			</batch:tasklet>

		</batch:step>
		<!-- <batch:step id="B000007step3"> <batch:tasklet> <batch:listeners> <batch:listener 
			ref="promotionListener" /> </batch:listeners> <batch:chunk reader="b3EndItemExtractReader" 
			processor="b3EndItemExtractProcessor" writer="noOpItemWriter" commit-interval="1000" 
			/> </batch:tasklet> </batch:step> -->

	</batch:job>

	
	<!--Reader Start-->
	
	<bean id="minimumCarSeriesLimit"
		class="org.springframework.batch.item.database.JpaPagingItemReader"
		scope="step">
		<property name="entityManagerFactory" ref="entityManagerFactory"></property>
		<property name="queryString"
			value="SELECT (MAX(w.id.ordrTakeBaseMnth)) FROM MstWklyOrdrTakeBase w WHERE POR = '#{jobParameters['POR_CODE']}'"></property>
			<!-- value="SELECT to_char(ADD_MONTHS((TO_CHAR(TO_DATE((SELECT (MAX(w.id.ordrTakeBaseMnth)) FROM MstWklyOrdrTakeBase w WHERE POR = #{jobParameters['POR_CODE']}),'YYYYMM') ,'DD-MM-YYYY') ),p.val1),'YYYYMMDD') as MINIMUM_CAR_SERIES FROM MstPrmtr p WHERE p.id.key1 = #{jobParameters['POR_CODE']} AND  p.id.prmtrCd = 'FROZEN_CREATION_LIMIT' "></property> -->
	</bean>
	
	<bean id="B000007CustomReader" class="com.nissangroups.pd.reader.B000007CustomReader"
		scope="step">
		<property name="pageSize" value="10000"></property>
		<property name="entityManagerFactory" ref="entityManagerFactory"></property>
	</bean>
	<bean id="errorReportReader" class="com.nissangroups.pd.reader.B000007ReportReader">
	</bean>
	
	<!--Reader End-->
	
	<!--Processor Start  -->
	
	<bean id="weeklyOrderTakeBaseMonthProcessor" 
		class="com.nissangroups.pd.processor.WeeklyOrderTakeBaseMonthProcessor"></bean>
		
	<bean id="b000007Processor" class="com.nissangroups.pd.processor.B000007Processor"></bean>
	
	<!--Processor End  -->
	
	<!--Writer Start -->
	
	<bean id="customListWriter" class="com.nissangroups.pd.writer.JpaCustomListItemWriter">
		<property name="entityManagerFactory" ref="entityManagerFactory" />
	</bean>
	
	<bean id="noOpItemWriter" class="com.nissangroups.pd.writer.NoOpItemWriter"></bean>
	
	<bean id="errorReportWriter" class="org.springframework.batch.item.file.FlatFileItemWriter"
		scope="step">
		 <property name="resource"
            value="file:#{jobExecutionContext['fileName']}" >

		</property>
		<property name="headerCallback" ref="headerCallback"></property>
		<!-- <property name="appendAllowed" value="true"></property> -->
		<property name="shouldDeleteIfExists" value="true"></property>
		<property name="lineAggregator">
			<bean
				class="org.springframework.batch.item.file.transform.DelimitedLineAggregator">

				<property name="delimiter">
					<util:constant
						static-field="org.springframework.batch.item.file.transform.DelimitedLineTokenizer.DELIMITER_TAB" />
				</property>
				<property name="fieldExtractor">
					<bean
						class="org.springframework.batch.item.file.transform.BeanWrapperFieldExtractor">
						<property name="names"
							value="porCode,priority,frznPrdMnth,frznTmng,frznOrdrTkBsMnth,frznType,ocfRgnCd,PrfxYes,PrfxNo,sfxYes,sfxNo,ext1,int1,ext2,int2,ext3,int3,ext4,int4,ext5,int5,dest1,dest2,dest3,dest4,dest5,errMsg"></property>
					</bean>
				</property>

			</bean>

		</property>
	</bean>
	
	<!--Writer End -->
	
	<!-- <bean id="springJpaWriter" class="org.springframework.batch.item.database.JpaItemWriter">
		<property name="entityManagerFactory" ref="entityManagerFactory" />
	</bean> -->
	
	<bean id="B00007ReportDao" class="com.nissangroups.pd.dao.B000007ReportDao" />
	
	
<bean id="headerCallback" class="com.nissangroups.pd.header.B000007ErrorReportHeader"></bean>
</beans>