<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
    xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:p="http://www.springframework.org/schema/p"
    xmlns:aop="http://www.springframework.org/schema/aop" xmlns:context="http://www.springframework.org/schema/context"
    xmlns:tx="http://www.springframework.org/schema/tx" xmlns:task="http://www.springframework.org/schema/task"
    xmlns:util="http://www.springframework.org/schema/util" xmlns:batch="http://www.springframework.org/schema/batch"
    xsi:schemaLocation="  
             http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop-4.0.xsd  
             http://www.springframework.org/schema/util http://www.springframework.org/schema/util/spring-util-4.0.xsd  
             http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-4.0.xsd  
             http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-4.0.xsd  
             http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx-4.0.xsd  
             http://www.springframework.org/schema/batch http://www.springframework.org/schema/batch/spring-batch-2.2.xsd  
             http://www.springframework.org/schema/task http://www.springframework.org/schema/task/spring-task-4.0.xsd">

    <import resource="../Config/spring-context-orm.xml" />
    
    <bean id="transactionManager" class="org.springframework.orm.jpa.JpaTransactionManager">
		<property name="entityManagerFactory" ref="entityManagerFactory" />
		<property name="dataSource" ref="dataSource" />
	</bean>
	<bean id="persistenceAnnotation"
		class="org.springframework.orm.jpa.support.PersistenceAnnotationBeanPostProcessor" />
	<tx:annotation-driven transaction-manager="transactionManager" />
	<bean id="jobRepository"
		class="org.springframework.batch.core.repository.support.MapJobRepositoryFactoryBean">
		<property name="transactionManager" ref="transactionManager" />
		<property name="isolationLevelForCreate" value="ISOLATION_DEFAULT" />
	</bean>
	<bean id="jobLauncher"
		class="org.springframework.batch.core.launch.support.SimpleJobLauncher">
		<property name="jobRepository" ref="jobRepository" />
	</bean>
    <batch:job id="b000017">
        <batch:listeners>
            <batch:listener ref="b000017jobExecutionListener" />
        </batch:listeners>
        <!--  PROCESS ID : P0001 -->
        <batch:step id="step1" >
            <batch:tasklet>
                <batch:listeners>
                    <batch:listener ref="b000017failureLoggerListener">
                    </batch:listener>
                </batch:listeners>
                <batch:chunk  reader="b000017reader" processor="b000017processors" writer="b000017writer"
                     chunk-completion-policy="completionPolicy" />
            </batch:tasklet>
            
			
        </batch:step>
        
        
    
    </batch:job>
    
    <bean id="completionPolicy" class="org.springframework.batch.repeat.policy.DefaultResultCompletionPolicy"></bean>
    <bean id="b000017failureLoggerListener" class="com.nissangroups.pd.listeners.CommonFailureLoggerListener"></bean>
    <bean id="b000017jobExecutionListener" class="com.nissangroups.pd.listeners.CommonJobExecutionListener">
    </bean>
    
    <bean id="b000017reader" class="com.nissangroups.pd.b000017.reader.OrdrTkBsMnthRdr" scope="step">
    <property name="entityManagerFactory" ref="entityManagerFactory"></property>
    </bean>
    <bean id="b000017processors" class="org.springframework.batch.item.support.CompositeItemProcessor"
     scope="step"> 
     <property name="delegates">
            <util:list>
                <ref bean="p1" />
                <ref bean="p2" />
            </util:list>
        </property>
     
    </bean>
    <bean id="b000017writer" class="com.nissangroups.pd.writer.NoOpItemWriter" scope="step">  </bean>
    <bean id="p1" class="com.nissangroups.pd.b000017.processor.ExtOrdrTkBsMnthProcessor" scope="step"> 
    	<property name="porCd" value="#{jobParameters['por']}" />
		<property name="productionStageCd" value="#{jobParameters['productionStageCode']}" />
		<property name="updateOnlyFlag" value="#{jobParameters['updateOnlyFlag']}" />  
    
     </bean>
    <bean id="p2" class="com.nissangroups.pd.b000017.processor.ExtOrdrMnthlyTrnProcessor" scope="step">
        <property name="porCd" value="#{jobParameters['por']}" />
		<property name="productionStageCd" value="#{jobParameters['productionStageCode']}" />
		<property name="updateOnlyFlag" value="#{jobParameters['updateOnlyFlag']}" />   
    
    </bean>
    
    <bean id="mnthlyOrdrTrnRepositoryObj" class="com.nissangroups.pd.repository.MnthlyOrdrTrnRepository"></bean>
    <bean id="byrMnthlyOcfUsgRepositoryObj" class="com.nissangroups.pd.repository.ByrMnthlyOcfUsgRepository"></bean>
    <bean id="byrGrpMnthlyOcfLimitTrnRepositoryObj" class="com.nissangroups.pd.repository.ByrGrpMnthlyOcfLimitTrnRepository"></bean>    
    <bean id="rgnlMnthlyOcfLmtRepositoryObj" class="com.nissangroups.pd.repository.RegionalMnthlyOcfLimitTrnRepository"></bean>
    
    
</beans> 