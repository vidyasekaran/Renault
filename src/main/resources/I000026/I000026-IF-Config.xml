<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:p="http://www.springframework.org/schema/p"
	xmlns:aop="http://www.springframework.org/schema/aop" xmlns:context="http://www.springframework.org/schema/context"
	xmlns:tx="http://www.springframework.org/schema/tx" xmlns:task="http://www.springframework.org/schema/task"
	xmlns:util="http://www.springframework.org/schema/util" xmlns:batch="http://www.springframework.org/schema/batch"
	xsi:schemaLocation="  
             http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop-4.0.xsd  
             http://www.springframework.org/schema/util http://www.springframework.org/schema/util/spring-util-4.0.xsd  
             http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-4.0.xsd  
             http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-4.0.xsd  
             http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx-4.0.xsd  
             http://www.springframework.org/schema/batch http://www.springframework.org/schema/batch/spring-batch-2.2.xsd  
             http://www.springframework.org/schema/task http://www.springframework.org/schema/task/spring-task-4.0.xsd">

	<import resource="../Config/spring-context-orm.xml" />
	<bean id="transactionManager" class="org.springframework.orm.jpa.JpaTransactionManager">
		<property name="entityManagerFactory" ref="entityManagerFactory" />
		<property name="dataSource" ref="dataSource" />
	</bean>
	<bean id="persistenceAnnotation"
		class="org.springframework.orm.jpa.support.PersistenceAnnotationBeanPostProcessor" />
	<tx:annotation-driven transaction-manager="transactionManager" />
	<bean id="jobRepository"
		class="org.springframework.batch.core.repository.support.MapJobRepositoryFactoryBean">
		<property name="transactionManager" ref="transactionManager" />
		<property name="isolationLevelForCreate" value="ISOLATION_DEFAULT" />
	</bean>
	<bean id="jobLauncher"
		class="org.springframework.batch.core.launch.support.SimpleJobLauncher">
		<property name="jobRepository" ref="jobRepository" />
	</bean>
	<bean id="i000026failureLoggerListener"
		class="com.nissangroups.pd.listeners.CommonFailureLoggerListener"></bean>
	<bean id="i000026jobExecutionListener"
		class="com.nissangroups.pd.listeners.CommonJobExecutionListener">
	</bean>

	<batch:job id="I000026">
		<batch:step id="step" >
			<tasklet ref="deleteData">
			</tasklet>
			<batch:next on="FAILED" to="Fail" />
			<batch:next on="COMPLETED" to="step1" />
		</batch:step>
		<batch:listeners>
			<batch:listener ref="i000026jobExecutionListener" />
		</batch:listeners>
		<batch:step id="step1">
			<batch:tasklet>
				<batch:listeners>
					<batch:listener ref="i000026failureLoggerListener">
					</batch:listener>
				</batch:listeners>
				<batch:chunk reader="mnthlyOcfIfTrnReader" processor="MnthlyOcfIfTrnProcessor"
					writer="mnthlyOcfTrnWriter" commit-interval="1000" />
			</batch:tasklet>
			<batch:next on="FAILED" to="Fail" />
			<batch:next on="COMPLETED" to="step2" />
		</batch:step>
		<batch:step id="step2">
			<batch:tasklet>
				<batch:listeners>
					<batch:listener ref="i000026failureLoggerListener">
					</batch:listener>
				</batch:listeners>
				<batch:chunk reader="errorReportReader" writer="errorReportWriter"
					commit-interval="10000"></batch:chunk>
			</batch:tasklet>
			<batch:next on="FAILED" to="Fail" />
			<batch:next on="COMPLETED" to="Success" />
		</batch:step>
		<batch:step id="Fail">
			<batch:tasklet>
				<batch:chunk reader="cmnHeaderReader" processor="cmnHeaderProcessor"
					writer="eimWriter" commit-interval="10000">
				</batch:chunk>
			</batch:tasklet>
		</batch:step>

		<!-- Update the overall status into Common File Header [P0003] -->
		<batch:step id="Success">
			<batch:tasklet>
				<batch:chunk reader="cmnHeaderReader" processor="cmnHeaderProcessor"
					writer="eimWriter" commit-interval="10000">
				</batch:chunk>
			</batch:tasklet>
		</batch:step>
	</batch:job>

	<!-- Step-1 -->

	<bean id="MnthlyOcfIfTrnProcessor"
		class="com.nissangroups.pd.i000026.processor.MnthlyOcfIfTrnProcessor"></bean>
	<bean id="mnthlyOcfIfTrnReader"
		class="org.springframework.batch.item.database.JpaPagingItemReader"
		scope="step">
		<property name="entityManagerFactory" ref="entityManagerFactory"></property>
		<property name="queryString"
			value="select m from CmnInterfaceData m  where m.cmnFileHdr.id.ifFileId='#{jobParameters['INTERFACE_FILE_ID']}'  and m.cmnFileHdr.id.seqNo=(Select min(cm.id.seqNo) from CmnFileHdr cm where cm.cmnInterfaceMst.ifFileId='#{jobParameters['INTERFACE_FILE_ID']}' and cm.stts='U'   ) ">
		</property>
	</bean>
	<bean id="mnthlyOcfTrnWriter" class="com.nissangroups.pd.writer.NoOpItemWriter">
	</bean>
	
		<!-- R000036 Reports -->
	<bean id="errorReportReader" class="com.nissangroups.pd.r000036.reader.R000036ReportReader">
	</bean>
		<!-- R000036 Reports -->
	<bean id="errorReportWriter" class="org.springframework.batch.item.file.FlatFileItemWriter"
		scope="step">
		<property name="resource" value="file:#{jobExecutionContext['fileName']}">

		</property>
		<property name="headerCallback" ref="headerCallback"></property>
		<property name="appendAllowed" value="true"></property>
		<property name="shouldDeleteIfExists" value="true"></property>
		<property name="lineAggregator">
			<bean
				class="org.springframework.batch.item.file.transform.DelimitedLineAggregator">

				<property name="delimiter">
					<util:constant
						static-field="org.springframework.batch.item.file.transform.DelimitedLineTokenizer.DELIMITER_TAB" />
				</property>
				<property name="fieldExtractor">
					<bean
						class="org.springframework.batch.item.file.transform.BeanWrapperFieldExtractor">
						<property name="names"
							value="porCode,ordrTakeBaseMnth,prdMnth,crSrs,ocfRgnCd,ocfByrGrp,ocfFrmCd,featureCd,ocfShrtDesc,ocfLmt,errMsg"></property>
					</bean>
				</property>
			</bean>
		</property>
	</bean>
	<bean id="R000036ReportDao" class="com.nissangroups.pd.r000036.dao.R000036ReportDao" />
	<bean id="headerCallback" class="com.nissangroups.pd.r000036.header.R000036ErrorReportHeader"></bean>
	
	<bean id="cmnHeaderReader"
		class="org.springframework.batch.item.database.JpaPagingItemReader"
		scope="step">
		<property name="entityManagerFactory" ref="entityManagerFactory"></property>
		<property name="queryString"
			value="SELECT c FROM CmnFileHdr c where c.id.ifFileId = '#{jobParameters['INTERFACE_FILE_ID']}'  and c.id.seqNo=(Select min(cm.id.seqNo) from CmnFileHdr cm where cm.cmnInterfaceMst.ifFileId='#{jobParameters['INTERFACE_FILE_ID']}' and cm.stts='U' ) "></property>
	</bean>

	<bean id="cmnHeaderProcessor" class="com.nissangroups.pd.processor.IfCmnHeaderProcessor"
		scope="step"></bean>

	<bean id="eimWriter" class="org.springframework.batch.item.database.JpaItemWriter">
		<property name="entityManagerFactory" ref="entityManagerFactory"></property>
	</bean>
	<!-- <bean id="commonRepository" class="com.nissangroups.pd.repository.CommonRepository" /> -->
	
	<bean id="commonutility" class="com.nissangroups.pd.util.IfCommonUtil"></bean>
	
	<bean id="cmnRep" class="com.nissangroups.pd.repository.CommonRepository" />
	<bean id="deleteData" class="com.nissangroups.pd.i000026.util.I000026Util" scope="step" />	
</beans> 